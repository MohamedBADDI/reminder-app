{"version":3,"sources":["components/App.js","actions/index.js","types.js","reducers/index.js","index.js"],"names":["App","state","text","date","Date","render_reminders","reminders","props","className","map","reminder","key","id","moment","fromNow","onClick","delete_reminder","clear_reminder","console","log","this","src","type","placeholder","onChange","e","setState","target","value","required","selected","showTimeSelect","timeFormat","timeCaption","dateFormat","add_reminder","Component","connect","action","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"wPAMMA,G,kNACFC,MAAQ,CACJC,KAAM,GACNC,KAAM,IAAIC,M,EAGdC,iBAAmB,WAAM,IACdC,EAAa,EAAKC,MAAlBD,UACP,OACI,6BAGA,wBAAIE,UAAU,cAENF,EAAUG,KAAI,SAAAC,GACV,OACQ,wBAAIC,IAAKD,EAASE,GAAGJ,UAAU,mBAC3B,6BAAME,EAASR,MACf,6BAAMW,IAAO,IAAIT,KAAKM,EAASP,OAAOW,WACtC,4BACIN,UAAU,kCACVO,QAAS,kBAAM,EAAKR,MAAMS,gBAAgBN,EAASE,MAFvD,UAQvB,4BACAJ,UAAU,yCACVO,QAAS,kBAAM,EAAKR,MAAMU,mBAF1B,oB,uDASA,IAAD,OAEJ,OADAC,QAAQC,IAAIC,KAAKb,OAGb,yBAAKC,UAAU,OACX,yBAAKa,IAAI,KACT,yBAAKb,UAAU,kBACX,oDAGA,2BACIA,UAAU,eACVc,KAAK,OACLC,YAAY,2BACZC,SAAY,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACxB,KAAMuB,EAAEE,OAAOC,SACjDA,MAAOR,KAAKnB,MAAMC,KAClB2B,UAAQ,IAGZ,kBAAC,IAAD,CACArB,UAAU,eACVsB,SAAUV,KAAKnB,MAAME,KACrBqB,SAAU,SAAArB,GAAI,OAAI,EAAKuB,SAAS,CAACvB,KAAMA,KACvC4B,gBAAc,EACdC,WAAW,QACXC,YAAY,OACZC,WAAW,uBACXN,MAAOR,KAAKnB,MAAME,OAElB,4BACIK,UAAU,4BACVO,QAAS,WACL,EAAKR,MAAM4B,aAAa,EAAKlC,MAAMC,KAAK,EAAKD,MAAME,MACnD,EAAKuB,SAAS,CAACxB,KAAK,GAAGC,KAAK,EAAKF,MAAME,SAJ/C,gBAMKiB,KAAKf,wB,GAvEZ+B,cAsFHC,eAAQ,SAAApC,GACnB,MAAO,CACHK,UAAYL,KAEjB,CACCkC,aC/FwB,SAACjC,EAAKC,GAC9B,IAAMmC,EAAS,CACXhB,KCJoB,eDKpBpB,KAAOA,EACPC,KAAOA,GAGX,OADAe,QAAQC,IAAI,MAAMmB,GACXA,GDyFPtB,gBCtF2B,SAACJ,GAC5B,IAAM0B,EAAS,CACXhB,KCZuB,kBDavBV,GAAKA,GAGT,OADAM,QAAQC,IAAI,SAASmB,GACdA,GDiFPrB,eC9E0B,WAI1B,MAHe,CACXK,KCnBsB,oBFwFfe,CAQZrC,G,iCG3EYM,EAvBG,WAAuB,IAAtBL,EAAqB,uDAAf,GAAIqC,EAAW,uCAChChC,EAAY,GAEhB,OADAL,EAAQsC,sBAAY,aDJI,iBCKpBD,EAAOhB,MACHhB,EAAS,sBAAOL,GAAP,CAAa,CAClBC,KAAMoC,EAAOpC,KACbC,KAAMmC,EAAOnC,KACbS,GAAI4B,KAAKC,YAEbC,sBAAY,YAAYpC,GAC5BY,QAAQC,IAAI,eAAeb,GACpBA,GDXgB,oBCYlBgC,EAAOhB,MACZhB,EAAYL,EAAM0C,QAAO,SAAAjC,GAAQ,OAAIA,EAASE,KAAO0B,EAAO1B,MAC5D8B,sBAAY,YAAYpC,GACjBA,GDbe,mBCchBgC,EAAOhB,MACboB,sBAAY,YAAYpC,GACL,IAEhBL,GCdL2C,G,OAAQC,YAAYvC,IAE1BwC,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OAEHI,SAASC,eAAe,U","file":"static/js/main.f165225d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {add_reminder,delete_reminder,clear_reminder} from '../actions'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nclass App extends Component{\n    state = {\n        text: '',\n        date: new Date()\n    }\n\n    render_reminders = () =>{\n        const {reminders} = this.props\n        return (\n            <div>\n\n            \n            <ul className=\"list-group\">\n                {\n                    reminders.map(reminder => {\n                        return(\n                                <li key={reminder.id}className=\"list-group-item\"> \n                                    <div>{reminder.text}</div>\n                                    <div>{moment(new Date(reminder.date)).fromNow()}</div>\n                                    <button \n                                        className=\"closeIcon remove btn btn-danger\" \n                                        onClick={() => this.props.delete_reminder(reminder.id)}>X</button>\n                                </li>\n                            )\n                    })\n                }\n            </ul>\n             <button \n             className=\"clearReminder btn btn-danger btn-block\"\n             onClick={() => this.props.clear_reminder()}>Clear reminder</button>\n             </div>\n        )\n        \n        \n    }\n\n    render(){\n        console.log(this.props)\n        return (\n           \n            <div className=\"App\">\n                <img src=\"\"/>\n                <div className=\"reminder-title\">\n                    <h2>What should you do?</h2>\n                </div>\n               \n                    <input \n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Enter what you will do..\"\n                        onChange = {(e) => this.setState({text: e.target.value})}\n                        value={this.state.text}\n                        required\n                    />\n\n                    <DatePicker\n                    className=\"form-control\"\n                    selected={this.state.date}\n                    onChange={date => this.setState({date: date})}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    timeCaption=\"time\"\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    value={this.state.date}\n                    />\n                    <button \n                        className=\"btn btn-primary btn-block\"\n                        onClick={() => {\n                            this.props.add_reminder(this.state.text,this.state.date) \n                            this.setState({text:'',date:this.state.date})\n                            }}>Add reminder</button>\n                        {this.render_reminders()}\n\n                   \n                \n            </div>\n        )\n    }\n}\n\n// function mapDispatchToProps(dispatch){\n//     return{\n//         add_reminder : () => dispatch(add_reminder())\n//     }\n// }\n\nexport default connect(state => {\n    return {\n        reminders : state\n    }\n}, {\n    add_reminder,\n    delete_reminder,\n    clear_reminder\n})(App)","import {ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDER} from '../types'\n\nexport const add_reminder = (text,date) => {\n    const action = {\n        type : ADD_REMINDER,\n        text : text,\n        date : date\n    }\n    console.log(\"Add\",action)\n    return action\n}\n\nexport const delete_reminder = (id) =>{\n    const action = {\n        type : DELETE_REMINDER,\n        id : id\n    }\n    console.log(\"Delete\",action)\n    return action\n}\n\nexport const clear_reminder = () => {\n    const action = {\n        type : CLEAR_REMINDER\n    }\n    return action\n}","export const ADD_REMINDER = 'ADD_REMINDER'\n\nexport const DELETE_REMINDER = 'DELETE_REMINDER'\n\nexport const CLEAR_REMINDER = 'CLEAR_REMINDER'\n\n","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDER } from \"../types\"\nimport {bake_cookie,read_cookie} from 'sfcookies'\nconst reminders = (state=[], action) => {\n    let reminders = []\n    state = read_cookie(\"reminders\")\n    if (action.type === ADD_REMINDER) {\n            reminders = [...state,{\n                text: action.text,\n                date: action.date,\n                id: Math.random()\n            }]\n            bake_cookie(\"reminders\",reminders)\n        console.log(\"from reducer\",reminders)\n        return reminders\n    }else if(action.type === DELETE_REMINDER){\n        reminders = state.filter(reminder => reminder.id !== action.id)\n        bake_cookie(\"reminders\",reminders)\n        return reminders\n    }else if (action.type === CLEAR_REMINDER){\n        bake_cookie(\"reminders\",reminders)\n        return reminders = []\n    }\n    return state\n}\n\nexport default reminders","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reminders from './reducers'\nimport './index.css'\nconst store = createStore(reminders)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,document.getElementById('root')\n)"],"sourceRoot":""}